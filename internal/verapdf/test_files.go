// Code generated by go-bindata.
// sources:
// example.xml
// blanco_cli.xml
// blanco_online.xml
// DO NOT EDIT!

package verapdf

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _exampleXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x9d\x6d\x6f\xdb\x46\xf2\xc0\xdf\xf7\x53\xcc\x9f\x2f\xfe\x60\x70\x8d\xc9\x59\x3e\x89\x39\xc9\x45\x6a\x3b\x86\xef\xf2\x60\xd8\xe9\x5d\x80\x80\x38\xac\xc8\x95\xb5\x09\xc5\x55\xb9\x4b\xa7\x2e\xfa\xe1\x0f\x24\x65\x5b\x72\xa2\xd8\xea\x31\x39\xef\x0d\x50\xb4\x15\xb9\x0f\x33\xb3\xc3\xdf\x2e\xc3\xc9\xcc\xf8\xa7\xdf\x16\x25\x5c\x8a\x5a\x4b\x55\x4d\x1c\xdc\xf3\x1d\x10\x55\xae\x0a\x59\x5d\x4c\x9c\xc6\xcc\x9e\x8e\x9c\x9f\xf6\x7f\x18\xd7\x62\xa9\x6a\xb3\xff\x03\x00\xc0\x78\xda\xc8\xb2\x38\xa9\x66\xaa\x5e\x70\x23\x55\xd5\x5f\xee\x6e\xd5\xa2\x14\x5c\x8b\x43\x61\xb8\x2c\x35\xc8\x62\xe2\xe4\xaa\x16\xce\xfa\x14\x38\xda\x43\x74\xa0\x1b\xe5\x90\x1b\x31\x71\x98\xcf\xf0\xa9\x1f\x3e\xc5\xf4\x2d\xfa\xcf\x18\x3e\xf3\xfd\xbf\xf8\xec\x99\xef\x3b\xfb\x63\x6f\x73\xc8\xaf\xcf\x75\xc9\x4b\x59\x74\x32\x3d\x5d\xa8\x42\x94\x77\xe7\x1d\x7d\x65\xda\x20\xfa\xd3\xd3\x5e\x34\xf2\xee\x4c\xf1\x17\x67\x62\xc9\x5b\x7f\xf4\x2c\x0a\xee\x9d\x69\xec\x7d\xd9\xc8\xe3\x0f\x6a\xba\x2e\xcc\x07\x35\xbd\xfd\xd5\x5d\x91\x46\x2c\x40\xcb\xdf\xc5\xc4\x09\xa3\xd4\x0f\x62\x67\xb3\x41\xd7\xa8\xe2\x0b\xb1\xef\xcd\xd5\x42\x78\x1f\x9b\xfc\x03\xcf\xbd\x4b\x51\xf3\x65\x31\xf3\x0a\x95\x37\x0b\x51\x19\xdd\x5d\x39\x3d\x7c\x71\x7a\xf8\xe2\xf9\x81\xea\xe5\xa8\x72\x71\x30\x17\xf9\x47\x51\x1f\xff\x72\xb2\xb7\x2c\x66\x63\xaf\x1b\x69\x53\x02\xaf\x15\xe1\xce\xb5\xdb\x85\x39\xeb\x3c\x09\x96\xb5\x9a\xc9\x52\xbc\xe6\x0b\x31\x71\x4e\x0f\x5f\x78\xcf\x9f\xe2\xcf\x70\xdb\xec\xba\x81\x03\xda\x70\x23\x5a\x91\xba\x76\xd0\x5e\x04\xa9\xa1\x52\x06\x72\xb5\x58\x96\x92\x57\x06\x3e\x49\x33\x87\x7f\xdc\xf6\x3e\xed\x7b\x43\x2d\x7e\x6d\x64\xdd\x75\xd7\x7b\x0e\x48\x7d\x70\xdd\x65\xe2\xcc\x78\xa9\xc5\x97\xac\x53\xac\x96\x76\xc9\xb5\x16\xc5\x59\x53\x0a\x3d\x71\xd2\xd0\x81\x19\x97\xe5\xcd\x85\xc4\x59\x35\xe8\x4c\xa2\x27\xce\x28\x4c\x47\xc9\x75\xa3\xeb\x8b\x29\x0b\x93\x2f\xcc\xd1\x7b\x52\x53\x0a\xd0\x4b\x91\xcb\x99\xcc\x3b\xb9\x27\xce\xc9\xf9\x1b\xc0\xd4\xf7\xa3\xa7\xf8\x8c\xf9\x7e\xe4\x40\x5e\xf2\x46\x8b\x89\x13\xef\xb1\xbd\xc0\x01\x23\xb4\x79\xdd\x2c\xa6\xa2\x9e\x38\x61\x6f\x9d\x46\xb7\xca\xb4\xb3\xde\x15\xc9\xbf\x2b\x4e\x88\x09\xdb\x22\xce\x4a\x75\x9d\xd7\x72\xd9\x39\xdc\xc9\x0c\x78\x05\x4d\x95\xf3\x52\x4e\x6b\x6e\x44\x01\xb9\x2a\x55\x53\x83\x5e\xf2\xbc\x5b\x84\x46\x8b\x02\x64\x05\xbc\x5f\x16\x33\x17\x15\x98\x39\x37\xfd\x4f\x3d\xe7\x65\x09\xb9\xaa\x0c\xef\xda\xac\x96\x19\xde\x34\x66\xd9\x98\x93\xca\x88\xca\xfc\x08\x5c\x43\x21\x66\xb2\xea\x47\x6a\xb5\x64\x63\x6f\x5d\x8e\xed\xd2\xaa\xe9\x07\x91\x9b\xfd\xd3\xc3\x43\x71\x29\x73\x71\x5c\xf3\xab\xb1\xb7\xba\xb8\xbd\x57\x6b\xc1\xfd\x8b\x5e\x88\x83\x73\xf8\xbf\x09\x54\x4d\x59\x8e\xbd\xee\xfa\xf6\x6e\x79\x6b\xc2\xbb\xf6\xde\xde\xbe\xef\xa3\x2a\x23\x7e\x33\xfb\xb5\x52\xe6\xe6\xd1\x7a\xef\x67\xde\x92\x5f\x08\xfd\xde\xcf\xdc\xd8\x07\x1f\xd4\xf4\x03\x9c\x1e\x9e\xf2\x0b\xf1\xc4\xeb\xba\x54\xe6\xdc\xd4\x82\x2f\xba\x16\xc9\x4d\x8b\x83\xf5\x7b\x4f\x3c\xb5\x14\x35\x37\xaa\xd6\xef\xa3\x20\xf3\x66\xb2\x2c\x0f\xce\xdf\xfb\xd9\xd8\xbb\x9e\x76\xbb\x32\x5e\xa7\x8d\xad\xda\x8e\x28\x69\x1b\x93\x5a\xdb\x98\xd4\xda\x26\xa4\xd6\x36\x89\x48\x69\x9b\x90\xd2\x36\xa5\xa4\xed\x08\x49\x69\x4b\x8a\x52\x23\x52\x94\x1a\x91\xa2\xd4\x88\x14\xa5\x52\x52\x94\x4a\x49\x51\x2a\x25\x45\xa9\x94\x14\xa5\x52\x52\x94\x42\x9f\x14\xa6\xd0\x27\xc5\x29\xf4\x49\x81\x0a\x7d\x52\xa4\x42\x9f\x16\xaa\x90\x16\xaa\x90\x16\xaa\x90\x16\xaa\x90\x16\xaa\x90\x16\xaa\x18\x2d\x54\x31\x5a\xa8\x62\xb4\x50\xc5\x68\xa1\x8a\xd1\x42\x55\x40\x0b\x55\x01\x2d\x54\x05\xb4\x50\x15\xd0\x42\x55\x40\x0b\x55\x21\x2d\x54\x85\xb4\x50\x15\xd2\x42\x55\x48\x0b\x55\x21\x2d\x54\x45\xb4\x50\x15\xc5\xa4\xd4\x8d\x69\xad\x2e\xad\x20\x48\x8c\x69\x6d\x44\x31\xad\x8d\x28\xa6\xb5\x11\x25\xb4\x50\x45\x2b\xa6\x17\x69\x05\xf5\x22\xad\xa8\x5e\xa4\x15\xd6\x8b\xb4\xe2\x7a\x91\x56\x60\x2f\xd2\x8a\xec\x45\x5a\xa1\xbd\x48\x2b\xb6\x17\x69\x05\xf7\x22\xad\xe8\x5e\xa4\x15\xde\x8b\xb4\xe2\x7b\x91\x56\x80\x2f\xa3\x15\xe0\xcb\x68\x05\xf8\x32\x5a\x01\xbe\x8c\x56\x80\x2f\x43\x46\x4b\x5d\x5a\xab\xcb\x68\xad\x2e\x0b\x69\xa9\x4b\xea\x93\x18\x63\xa4\x52\x47\xb0\xc0\xa7\xa5\x2e\x2d\x54\x05\xb4\x50\x15\xd0\x42\x55\x40\x0b\x55\x21\x2d\x54\x85\xb4\x50\x15\xd2\x42\x55\x48\x0b\x55\x21\x2d\x54\x45\xb4\x50\x15\xd1\x42\x55\x44\x0b\x55\xb4\x62\x22\x19\xad\xbc\x90\x2c\xa6\x85\xaa\x98\x16\xaa\x62\x5a\xa8\x8a\x69\xa1\x8a\x56\x9a\x53\x96\xd0\x42\x55\x42\x0b\x55\x09\x2d\x54\x25\xb4\x50\x95\x0c\x89\xaa\xb1\x57\x37\xa5\xd8\x72\x6f\xd7\x7c\xf8\xc1\x5e\xbc\x99\x0f\x1f\x77\xce\x87\xff\xe0\x64\xf8\x2f\x54\x0d\xe2\x52\xd4\x57\x30\x53\x95\x01\xb1\x98\x8a\xa2\xb8\x4e\x7e\x9f\xf7\xf5\x11\x64\x75\xd1\x27\xbe\xe7\x55\xd1\xa7\xc6\x9f\xa9\x1a\x6a\x51\x15\xa2\x96\xd5\xc5\x8f\x60\xe6\x02\x2e\xca\xab\xe5\x1c\x3e\xc9\xc2\xcc\x41\xde\x96\x77\x68\x07\x6a\x6f\x77\xa3\x17\x32\x6f\xaf\xf1\xfa\xaa\x1d\xea\xab\x7e\xb0\xea\x76\x23\x4f\xd7\x7f\x59\xab\x8b\x9a\x2f\x56\x09\xf8\xa7\xa2\x15\x50\x4b\xdd\x2e\xf0\xde\x8e\xb9\xf5\x8f\x5b\x71\x1f\x9a\x54\xff\x46\xd5\x57\xaa\x10\x30\x99\x40\x00\x7f\xfc\x01\x52\xff\xb3\xd5\xf6\xe0\x46\x86\xf6\x4e\xd5\x94\xe5\xd6\x9b\xa6\x6e\xc4\x7f\x23\x1f\x3f\xcb\xdc\xe0\xbe\x67\x06\xfd\x07\x04\xf8\xf8\x7e\xe6\xb5\x0e\xd0\x59\xaf\x7b\x18\x8f\x79\x63\xf8\x42\x02\x02\x03\xf0\x9f\x3c\x56\x6c\x0c\x66\x81\x38\x89\xb6\x9b\xc0\x1f\xc2\x04\x83\xa2\x04\xf7\x92\x4d\x94\xb0\x9d\x51\x12\x6c\xab\xf3\x01\x77\x59\xf2\x76\x2e\x40\x77\x26\x83\x8f\xe2\xea\x93\xaa\x8b\xdb\x27\x75\xa6\xca\x52\x7d\x12\x05\x08\x69\xe6\xa2\x86\xe9\x15\x70\x38\x78\x7e\x76\x76\xf2\xfc\xf8\x08\xce\x8e\xde\xfe\x72\xf6\x1a\x5c\xff\x70\xfe\xa4\xa3\xcc\xcb\x93\xd7\x47\xf0\xe2\xe8\xe8\x10\x5c\xff\xf9\xfc\x09\xe4\x73\x5e\xf3\xdc\x88\x1a\xb4\xf8\xb5\x11\x55\x2e\xbe\xea\x0e\x6a\x35\x81\x96\xd5\x45\x29\xd6\x46\xbb\x19\x67\x0f\x5a\x69\x45\x55\x6c\x13\x78\x59\x8b\x5c\xb4\xe4\x69\x07\xaa\xe0\xe8\xcd\x4b\x58\xf0\xfa\xa3\xa8\x77\x04\xcd\x81\xd2\xbd\x1b\x3d\x14\x36\xbd\x40\x7f\xef\xe5\x39\x38\x7b\xf9\xe2\xa6\xb4\xcb\x35\x42\xe0\xff\xf9\x62\xf9\xd7\xee\x5f\xb7\x1a\xac\x3a\x1c\xbd\x79\xf9\x59\xfb\x6f\x8f\x1c\x59\x15\xb2\x16\xb9\x79\xd3\x69\xa8\xdf\x07\x99\xcb\x22\xf0\x9f\x78\xeb\x97\x1f\xcd\xa9\xe2\xae\xb4\x51\xe6\x32\xb4\x46\xda\x24\x73\x31\xb1\x46\xda\x51\xe6\x86\xb1\x35\xd2\xa6\x99\x8b\x81\x35\xd2\xa2\x9f\xb9\x21\xb3\x47\x5c\xcc\xdc\xd4\x1e\x69\x83\xcc\x0d\x46\xf6\x88\x1b\xf5\xaf\x3d\xb6\x88\x1b\x67\x6e\x10\xda\x23\x6e\x9a\xb9\x81\x6f\x8d\xb8\x0c\x33\x97\xd9\x43\x5d\xd6\x1e\x17\xec\xe1\x18\x0b\x33\x37\xb2\xe7\xbc\xc0\xa2\xcc\x45\x7b\x40\xc6\xe2\xcc\x0d\xed\x01\x19\x6b\x8f\x63\xf6\x80\x8c\xa5\xfd\x7b\xae\x25\xe2\x06\x7e\xe6\x26\xf6\x90\x21\xc0\xcc\x0d\xec\x39\xe2\x04\x61\xe6\x06\xf6\xbc\xa6\x05\xed\x7b\x9a\x3d\xd2\x26\x99\x1b\xd8\xb3\x4b\x84\x2c\x73\x23\x7b\xac\x1b\x8e\x32\x37\xb1\xe7\x4d\x2d\x4c\x33\x37\xb4\x07\xbb\x11\xcb\xdc\xc0\x9e\xf3\x63\x14\x66\x6e\x6c\x0f\xc7\xa2\x28\x73\x03\x7b\x1e\xb5\x28\xce\xdc\xd8\x1e\x90\x45\x49\xe6\x32\x7b\x8e\xbb\x51\x9a\xb9\xcc\x9e\xf3\x63\xdc\xbe\x59\xda\x03\xb2\x38\xc8\x5c\xb4\x07\x64\x71\xfb\xaa\x66\x0f\x19\xe2\x24\x73\xed\x79\xd2\x12\xcc\xdc\xf8\x5b\xf8\xc2\xa0\x1f\xec\x3e\xab\x85\xbf\xfb\x07\xbb\xc8\x67\x0f\xfe\x64\xd7\x17\x98\x3f\x3b\xfe\x19\x16\xfc\x0a\xa6\xa2\xff\xbc\xaf\xaa\xf2\x0a\xe4\xac\xff\x70\x2f\x4b\x01\x73\xae\xb7\xd4\xb9\xef\xcb\xe2\x37\x5a\x68\xe0\x15\xb4\x03\xad\xd7\xd2\xff\x93\x05\xef\xcf\x8e\x7f\xfe\xd3\xf5\xee\xd7\x3f\x8e\xdd\xde\x9c\x4c\xc0\x69\x85\x73\xac\x2e\x87\x1f\x64\x5e\x6b\xdd\xfa\xbc\xb5\xed\xa3\x79\xd0\xbe\xa1\xc2\x21\x35\x85\x49\xfd\x35\x7d\x52\xd9\x62\x30\xa1\xe6\xcb\x38\xa2\xa6\x31\xad\xda\x54\xb4\x4a\x53\x31\x72\x7b\x11\x8b\xc8\x69\x4c\x6a\x47\x0a\xfd\xcc\xfb\xed\xe6\x2d\xa8\xfb\x33\x9e\x55\x97\x77\x27\x8b\x6e\x58\xd9\xfe\xe7\x51\x1b\x03\x33\x17\xef\xb3\x05\xfb\xdf\x39\x58\x0f\xa4\xae\x2d\x28\x1b\x48\x5d\x1b\x0e\xd5\x03\xa9\x6a\x03\xc0\x06\x52\xd5\x9a\x03\xf5\x50\xfa\xda\x72\x9c\x1e\x48\x5f\x2b\x0e\xd3\x43\xe9\x6a\xc3\x51\x7a\x28\x5d\x89\xed\x3e\xd6\x1c\xa3\x87\xd2\x97\xd0\x1e\x64\x45\x85\xd7\xa1\x74\x25\xc4\x28\x2b\x6a\xbb\x0e\xa5\x2b\xa1\xe3\xb1\x15\x55\x5d\x87\x7a\xc9\x23\xc4\x26\x2b\xea\xb9\x0e\xa5\x2b\x21\x36\x59\x51\xc9\x75\x28\x5d\x09\xb1\xc9\x8a\x1a\xae\x43\xe9\x6a\x43\x5a\x8d\x81\x74\xb5\xa2\x7a\xeb\x50\xba\x12\xda\x73\xac\xa8\xdb\x3a\x94\xae\x84\xf6\x1c\x2b\x2a\xb6\x0e\xf5\x15\x80\x10\x9b\xac\xa8\xd5\x3a\x94\xae\x84\xd8\x64\x45\x95\xd6\xa1\x74\x25\xc4\x26\x2b\xea\xb3\x0e\xa5\x2b\x21\x36\x59\x51\x99\x75\x28\x5d\x09\xb1\xc9\x8a\x9a\xac\x43\x85\x14\x10\x62\x93\x15\xd5\x58\x87\xd2\x95\x10\x9b\xac\xa8\xc3\x3a\x94\xae\x84\xd8\x84\x56\x94\x60\x1d\x4c\x59\x42\x74\x42\x2b\xca\xaf\x0e\xa6\x2c\x21\x3e\xa1\x4f\x09\x50\x48\x09\x50\x48\x09\x50\x48\x09\x50\x56\xd4\x0f\x1e\x4c\x59\x4a\x80\xa2\x14\x66\x8b\x94\xe2\x6c\x91\x51\x02\x14\xa3\x04\x28\x4a\x21\xb6\x48\x29\xc6\x16\x29\x05\xd9\x22\xa5\x28\x5b\xa4\x14\x66\x8b\x94\xe2\x6c\x91\x52\xa0\x2d\x52\x8a\xb4\x45\x4a\xa1\xb6\x48\x29\xd6\x16\x29\x05\xdb\x22\xa5\x68\x5b\x8c\x28\x01\x2a\xa2\x04\xa8\x88\x12\xa0\x22\x4a\x80\xa2\x14\x36\x8e\x94\xe2\xc6\x91\x52\xe0\x38\x52\x8a\x1c\x47\x4a\xa1\xe3\x48\x29\x76\x1c\x29\x05\x8f\x23\xa5\xe8\x71\xa4\x14\x3e\x8e\x94\xe2\xc7\x91\x52\x00\x39\x52\x8a\x20\x47\x4a\x21\xe4\x48\x29\x86\x1c\x07\x0d\x22\x1f\x34\x09\x7d\x72\x37\x09\xfd\xee\x05\xe8\xf1\xa1\x19\xe8\x4f\x66\xc0\xe1\xda\xc8\x1b\x95\xe3\xd7\xaa\xc5\x17\x4a\x68\xe0\xcb\xa5\xe0\x35\x70\xb3\xd6\xa1\xab\x3d\x5f\x01\x2f\x4b\x50\x33\x90\x46\x83\xa8\x4c\x2d\x85\xee\xf3\xd2\xcf\xf9\xa5\x00\x5e\xf1\x52\x5d\xa8\x46\xc3\xb2\x6e\xcd\x6f\xda\xdb\xb2\x82\x65\x2d\x0a\x31\x93\x95\x28\xe0\xdd\xab\x53\xd0\xf9\x5c\x2c\xb8\xfe\x71\x55\x02\x9a\x97\x5a\xc1\x54\x6c\x54\xc4\xbf\xc9\x87\x2f\xab\xae\x4b\x2b\x2b\x7c\x92\x66\x0e\xe2\xd7\x46\x5e\xf2\xb2\x55\xe1\x92\x97\x8d\xd0\xbb\xd6\xa3\x3f\x50\xfa\x70\xa5\xd3\x43\x53\xdf\xb7\x46\x39\xa9\x66\xea\x15\x37\xf9\xfc\xdd\xab\xd3\x6f\x9e\xda\xfe\x91\xf9\x28\xfb\x6e\x3e\xfa\x76\x2e\x6e\x5d\x34\xe7\xa6\xf5\xa7\x75\xf7\x54\xad\x0f\xe7\xaa\xf3\x5d\x59\x5d\xf4\x3e\xd2\xbb\x51\x6b\x31\xbe\x72\x9d\x57\xc2\xf0\x82\x1b\x0e\x1f\xc5\xd5\xae\xfe\x71\x7a\xb8\xab\x7b\x2c\x56\xb3\xfd\x4b\xcb\xdf\x05\x4c\x26\x80\xdf\xb5\xf6\xc1\xa3\x72\x96\xf0\x3f\xad\xa9\xf1\xe0\x82\x1a\xcf\x2b\x78\xd7\xe7\xd4\x5d\x77\x90\xde\x17\x2a\x65\x36\xfc\xe1\xfc\x15\xd7\x1f\x5b\x67\xd8\xd9\x17\x56\x53\x3c\xd4\x15\x56\x93\xea\x7e\xc2\xc9\x04\x66\xbc\xd4\xdf\xa1\x2c\xfc\xe7\x7b\x67\x90\xb9\x78\xef\xe6\x89\xe1\x03\x76\xcf\x34\x48\x37\xd2\x17\xe3\xed\x96\xbb\x4a\x5f\xfc\x58\xcf\x0f\x61\xe6\x62\x74\xaf\x0d\x46\xf7\xdb\x80\x45\xe1\xa6\x09\x62\x5b\x4c\x10\x65\x2e\xa6\xf7\x9e\xa1\x1e\x92\x34\x67\x33\x87\x35\xf3\x6d\xb1\x40\x9c\xb9\x2c\xb8\xd7\x02\xf1\xee\x16\x08\x6d\xb1\xc0\x28\x73\xd9\xbd\x3e\x10\xec\xee\x03\x81\x35\x3e\x90\x66\x6e\x70\xaf\x0f\x04\xbb\xfb\x40\x60\x8d\x0f\x60\x2b\x6d\x72\x9f\x09\x42\xff\x21\x2c\x64\xa3\x4d\x23\x8c\x86\x36\xc2\xb6\x13\x49\xbb\x7b\x1b\x2e\x4b\xbd\x79\x6b\xec\x5d\xf2\x52\x16\xdd\xe9\xe4\x4c\x2c\x55\x7d\x67\xde\x71\xd1\xd4\xfd\x8b\x8e\x36\xbc\x36\x13\x07\xe3\x20\x8c\x83\x10\xd3\x38\x4e\x52\x07\x66\xb2\x92\x7a\xbe\x76\x79\xc4\x82\x91\xb3\xef\xfb\xcf\xda\x7f\x70\x2f\x8a\xd2\xb1\x77\x3d\xc6\xed\xd0\x63\xef\x83\x9a\xf6\x3f\xbb\xff\x5d\x49\x35\x9e\xb6\x6f\x09\xe7\xcd\x62\xd1\x9e\x47\x8c\x32\xbc\xfc\x9b\x9a\x76\x87\xe0\xd5\x51\xe7\xad\x3a\xe5\x75\x7b\x5c\xf2\x1d\x10\x55\x5e\x5f\x2d\x8d\x28\xda\x5f\x6b\x63\xdf\xd5\x48\x43\xae\x16\xcb\x52\xf2\xca\x74\xfd\x2a\x55\x1d\xdc\x5e\xb8\x19\xba\x9f\xc9\x77\xf6\xf1\x73\xa3\xac\x59\x6d\x3c\x13\xdc\x34\xb5\xb8\x1e\xfb\x4e\x67\x7f\xec\x6d\x36\x58\xeb\x59\x8b\x25\x97\xf5\xf6\x8e\x1b\xf7\xd7\xfa\x6d\x5f\x83\x28\x89\xbe\xb4\x06\x81\xcf\xd6\xd6\x20\x61\xc9\xdd\x35\x18\x7b\xeb\x96\xde\xff\xa1\x9b\xbb\x5d\xfc\x7f\x07\x00\x00\xff\xff\x24\xb7\x8d\xaf\x93\xf0\x00\x00")

func exampleXmlBytes() ([]byte, error) {
	return bindataRead(
		_exampleXml,
		"example.xml",
	)
}

func exampleXml() (*asset, error) {
	bytes, err := exampleXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example.xml", size: 61587, mode: os.FileMode(436), modTime: time.Unix(1634639234, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _blanco_cliXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x6d\x73\xe2\x38\x12\xfe\xbc\xf3\x2b\xba\xfc\x69\xb7\x36\xf8\x05\x02\x24\x29\xc3\x16\xe1\x25\xeb\xad\x04\x28\x70\xe6\xe6\x6a\x2a\x45\x09\xbb\x0d\x9a\xb1\x2d\x9f\x24\x13\xb2\xbf\xfe\x4a\x36\x06\x93\x17\x76\xe6\x8a\x49\xe6\xaa\xf2\x25\xb1\x5a\xad\xee\xd6\xf3\xb4\x5a\x92\x8d\xfd\xc7\x3a\x0a\x61\x85\x5c\x50\x16\xb7\x34\x4b\x37\x35\xc0\xd8\x63\x3e\x8d\x17\x2d\x2d\x95\x41\xe5\x4c\xfb\xa3\xfd\xc1\xe6\xe4\x7e\x82\x22\x0d\xa5\x68\x7f\x00\xb0\x13\xce\x3c\x14\x82\xf1\x2e\x8b\x03\xba\x80\x75\x14\xc6\xe2\x22\x16\xd5\x96\xb6\x94\x32\xb9\x30\x8c\xfb\xfb\x7b\x7d\x85\x9c\x24\x7e\xa0\x33\xbe\x30\x3e\x92\x90\xfa\x44\x52\x16\x8f\x39\x0b\x68\x88\x1a\x44\xfe\x80\x85\x3e\xf2\x96\xa6\x29\xa3\x00\xb6\x24\xe2\xab\x68\x7f\xec\x5c\x3b\xbd\x8e\xdb\xb7\x8d\xbc\x9d\xf7\xad\x72\x03\x5b\x97\x41\x48\x56\x2c\xe5\x2d\x6d\xdc\x1b\x74\x66\xd6\xec\x52\x03\x8e\x1e\xe3\xfe\x98\x08\x81\xa2\xa5\x05\x24\x14\xca\x0b\x59\x0f\x08\x0d\x45\x4b\xab\x58\x5a\xdb\x36\x1e\xd9\xd9\x58\x0f\x90\xc8\x94\x63\x59\x06\x60\x63\x4c\xe6\x21\xfa\x83\xbc\x53\x14\xf2\x9d\x7e\xbb\xd3\x75\x9d\xd1\xd0\x36\x8a\xf6\x33\x1a\xc3\xe1\xc8\xed\xfc\x93\x56\x77\x74\x3d\x9a\x4c\xc7\x9d\x6e\xff\x90\x56\x6f\xd4\xbd\xbd\xe9\x0f\xdd\xd9\xb4\xdf\xbd\x9d\x38\xee\xbf\x0f\x29\xf7\x6f\x2e\xfb\xbd\x5e\xbf\x37\x1b\x38\xd7\x07\xad\xf6\x3f\xb9\xb3\xab\xd9\xd4\xcd\x20\x7f\x59\x6d\x30\x1a\xba\x87\xfb\x27\x37\xb3\x4f\xa3\xcb\xbf\xfa\xdd\x83\x7a\x4e\xb7\x3b\x9e\x8c\xfe\x29\x28\xe7\xa6\x73\xd5\xff\x26\x73\x43\xe5\x38\x03\x78\xd6\x73\x32\x3a\x3a\x93\x83\xc0\x38\x43\xb7\x3f\x51\xc4\x7d\xec\xcf\xb2\xa0\x07\x4e\xff\xba\x37\x3d\x34\xe4\x7a\xf4\xaf\xd9\x75\xff\x63\xff\x7a\xa6\xdc\x1d\xd2\xbc\xe9\xbb\x9d\x5e\xc7\xed\x1c\xd2\x19\xdd\xba\xd7\xce\xb0\x7f\xd0\xe3\xe8\xd6\x1d\xdf\xba\x2a\xd4\xc3\xa8\x8f\x3b\x57\x07\x71\x1c\x77\x5c\xb7\x3f\x39\x98\x7b\xe3\xd1\xd4\x9d\x76\x27\xce\xd8\xfd\x16\xbc\xc7\x93\xd1\xb8\x3f\x71\x9d\xc3\xe1\x4f\xff\xec\xf4\x9c\xe1\xd5\x41\x15\xe7\x6a\xd8\x71\x6f\x27\x4f\xc3\xb7\x8d\x67\x17\xde\x56\x6f\x6f\xe5\x26\x61\xba\xa0\xb1\xe8\xb2\x30\x44\x4f\xd5\x97\x47\x6b\x38\xef\x87\x8d\xc5\xa2\x2c\x94\xe2\x89\x49\x84\xed\x01\x8b\x25\x4c\x49\x94\x84\x68\x1b\x99\x64\xa7\xb0\xa9\x8e\x6d\x4b\xb7\x4e\x75\xcb\xac\x4c\xba\xb6\x51\xc8\x76\x5a\x3e\x0a\x8f\xd3\x44\x45\xd0\xce\x0d\x9d\x40\xc2\x19\x0b\x80\x05\xe0\xb1\xd8\xc3\x44\x9e\x40\xa0\xfc\xe4\x21\xe9\xd0\xc3\x15\x86\x2c\x41\x1f\xe6\x0f\x20\x97\xa8\xea\x30\x19\xf7\x06\x20\x91\x44\xba\x6d\x94\x4d\xee\x1c\xe5\xa3\xff\x22\xbc\xbd\x99\xba\xa1\x8c\xe6\x2e\x2b\xb9\xe8\xa9\xa4\xb2\x0b\x5e\xff\x42\xb8\x6d\xec\xac\xec\x2c\x13\x29\x39\x9d\xa7\x12\x45\xdb\x36\x4a\x8d\x2d\x2d\xf9\xa0\xff\x05\x5a\xf7\x21\xc1\x57\xc3\x57\x2a\x67\x3f\x02\x64\x35\x8b\x32\xc4\xa5\xf6\x1b\x02\xdc\x8f\xe6\xe8\xfb\xe8\xc3\x80\x86\xaf\x02\x32\x16\x0e\xd5\x3e\x7e\x74\xa0\x0b\xeb\xca\xf8\x7e\x56\xbf\xd8\xf3\x86\xe0\x3b\xdd\x2e\x6c\x4e\x34\xaf\x01\x7d\xd9\xdd\xb1\x81\xa7\x9e\x97\xe4\xa6\xf7\x61\x7f\x41\xfe\x96\xa0\x47\x64\xf1\x2a\x70\xd3\xcc\xd1\xd1\x81\x56\x56\x1f\x61\xfc\x44\xf4\x86\xf0\xde\xf4\xdd\x29\x44\x28\x89\x4f\x24\x01\x5c\x4b\x4e\xb2\x9d\xf5\x35\x10\x7f\xd1\xf7\xb1\x49\x88\x50\x8a\x9b\x8d\x9f\x82\x85\x67\x64\xc7\xa7\xa1\x68\xbd\x70\x64\xb1\x03\xba\xc6\xed\x25\x87\xae\x1d\xbf\xa5\x49\x9e\xa2\xa6\x1a\x28\xc6\x1c\x03\xba\x6e\x69\x6a\xd6\x03\xba\xbe\xf1\x67\xea\x52\x53\x1a\xb3\xb1\xe2\xa5\x42\xb2\xa8\x28\x15\xdb\xcb\xd2\x70\x34\x1b\x5c\x77\x3e\x8e\x6e\x27\x5b\xd6\xed\x58\x54\x2f\x7c\x94\xea\x92\x04\x1e\x47\x75\x37\x6a\x69\x9b\x07\x2d\x97\xa8\x5c\xb1\xce\x9b\x66\xc5\xb4\x2a\xa6\xe5\x9a\xd6\x85\x69\x5e\x98\xe6\xef\xd9\xc3\x5e\xfe\x88\xea\x45\x96\x1d\xea\x8f\x6d\x6c\x9b\xfb\x1a\x65\x8e\x4a\xcf\xb9\xfe\x33\x04\x16\x1d\x59\x8c\x7b\x71\x2f\x89\x58\xb6\xd5\x9f\x5c\x25\x6b\x96\xfb\x79\x1a\x66\xa4\xec\x9e\xcb\xbd\x2b\xc2\xa9\x5a\x09\x85\xc6\xae\xbd\x61\x6a\x0f\xc5\xec\xe6\x6b\x3c\xba\xfa\x66\x42\x2a\x31\x02\x41\xff\xc6\x96\x56\x37\xab\x67\xf5\xe2\x3e\x9b\x4d\xdd\x58\xb2\x08\x8d\xaf\xa9\xf7\x85\x78\x46\x91\xbd\xdc\x58\xb0\x90\xc4\x0b\x43\x70\xcf\x58\x50\xb9\x4c\xe7\xba\xc7\x22\x23\x8d\xa9\xcf\x3c\xf5\x2f\xf1\x83\x8a\xea\xd4\xf3\x5e\xe3\x9e\xf1\xaf\x41\xc8\xee\x45\xd1\x29\x51\x48\x95\xa8\x46\xe2\x07\xc4\x98\x87\x24\xf6\x98\x9e\xf8\xc1\x6e\x79\xda\x86\x0a\x2c\x7b\x5a\x6d\xaf\xdf\xf9\x35\x3e\xbf\xb1\x7f\xcf\x6d\xfd\x99\xfb\xb6\x64\x92\x84\x1d\x21\x90\x2b\x4d\xd1\xd2\x6a\xcd\x86\x06\x54\x74\x59\x94\x84\x94\xc4\x72\xbf\xc0\xd8\x9b\x5d\xa4\xf7\x38\xd7\x8a\x15\xdc\x65\xb1\x60\x5c\xd2\x34\x2a\xa5\x5d\xd5\xb4\x9a\x15\xf3\xbc\x62\x36\x5c\xab\x7e\x61\x55\x2f\xaa\xa6\x5e\x6d\x36\x7f\x37\xab\xe5\xd4\xcb\xa1\x1e\xf7\x06\x46\xa7\x62\x5d\xc2\x6e\xba\xb0\x71\xba\x5f\xb4\xf6\x8a\xd1\x6e\xb2\x90\xa5\x08\x90\x05\xa1\xb1\x90\xe0\x4c\x47\x60\x9d\x9b\x66\xbd\x62\x5d\x54\x4d\xb3\x7e\x02\x5d\xc6\xf5\xec\xb9\x09\x24\xf6\xb3\xa6\x0a\xc8\xb2\x4e\xe0\x5a\x31\x0b\x97\xcf\x14\xa0\x2c\x67\x4a\x13\xdf\x48\xc9\x16\xb8\x6d\x54\x5b\x11\x30\xee\xd3\x98\x84\x2d\xed\x54\x03\x21\x89\x4c\x45\x4b\x1b\x74\x9c\xeb\x7e\xaf\xbc\xda\x54\xb8\x8e\x0f\x22\x41\x8f\x06\xd4\xcb\xe6\xd0\xd2\x9c\xe9\x68\x96\x85\x3d\xb3\x34\xf0\x42\x92\x0a\x6c\x69\x0d\xdd\xd2\x6b\x1a\xa8\xa4\x19\xa6\xd1\x1c\x79\x4b\xcb\x5e\x87\xe4\x26\x4a\x36\x23\x14\x82\x2c\xb0\xed\x2e\x31\x3f\xdf\x49\x4e\x68\x88\x1c\x7c\x9a\xd5\x2a\xc2\x1f\x40\x2c\x49\x18\xaa\x9a\x2d\x09\x8d\xb3\x22\xec\xf4\xe0\x2b\x3e\xdc\x33\xee\xeb\xf0\x64\x24\xc7\x00\x39\x47\x1f\x24\x03\x2a\x00\xa9\x5c\x22\xcf\x86\x85\x44\xc8\xe7\x1c\xd0\x18\x08\xa8\x94\x50\x76\x4e\x3e\xfc\xf2\xcb\x2f\x44\x40\x0e\xec\x1c\x7d\xd5\xad\x3a\x27\xca\x2e\xc6\x1e\x42\x4d\x3f\xd5\x4f\x33\x4a\xd4\x53\xfd\x04\x58\x6e\x3f\xa0\x5c\x48\x48\xd4\x26\x5e\x78\xc9\x4c\x87\x34\x46\xc2\xe9\xdf\xe8\xef\xbc\xc0\x61\x17\x03\xbd\x6a\x1b\x05\x38\x3b\xb8\x42\x96\xc3\xbe\x13\x29\xa1\xca\x85\x76\x97\x89\x1e\xf3\xd2\x08\x63\x69\x1b\xb9\xa8\xac\xa4\xe0\xc3\xb5\x6c\x73\xc6\xa4\x6d\x14\xad\x9d\x65\xe3\xb1\x69\xdb\xd8\xe6\xc7\xa1\x8c\x69\x1e\x2d\x63\x9a\xdf\x97\x31\x4e\x00\x04\xfc\xcd\x8c\x81\xc6\x01\xe3\x51\xbe\xac\x4a\xcc\xfa\x4c\x2d\xb0\x24\x41\xc2\x81\xc8\xd2\x80\x13\x45\x58\x0c\x2a\xb1\x58\x00\x54\x0a\xc0\x58\x72\x8a\x02\xe4\x92\x48\x58\x92\x15\x02\x89\x49\xc8\x16\x2c\x15\x6a\x55\x27\x6a\xe2\x28\x14\x53\x09\x47\x1f\x03\x1a\xa3\x0f\x9f\x6e\xc6\x20\xbc\x25\x46\x44\x9c\x6c\xf2\x94\x84\x82\xc1\x1c\x77\xd7\x96\x4d\xce\x66\x39\x4a\xe3\x6c\x88\x8a\x15\xee\xa9\x5c\x02\xfe\x27\xa5\x2b\x12\xaa\x29\xac\x48\x98\xa2\xd0\xff\x3f\x68\xb7\xce\xcf\x8e\x48\x7c\xf5\x7b\x4b\xc5\x96\x77\x8f\x48\x45\x52\x99\x73\xa6\x12\xc3\x63\x59\x42\xd0\x78\x91\x03\xff\xb4\x86\x14\x27\x2f\x55\x49\x7e\x20\xe8\x46\x11\xea\x67\xf3\xee\x98\x04\x54\x6b\xd6\xd1\x08\xa8\x3e\x5e\x79\xd5\x83\x04\xf4\x70\x45\x3d\x9c\x5c\x5d\x42\x44\x1e\x54\xaa\xa7\x02\x7d\x60\x71\xf8\x00\x34\xd8\xe5\xfa\x92\x88\xbc\xac\xaa\x4d\x12\x46\xa9\x4c\x52\xe9\xc4\x52\xb1\x96\xad\xb1\x54\xa8\xb5\x19\x83\x32\xe4\xb1\x90\xa5\x1c\x44\x42\x3c\x7c\x1d\x2e\x0c\x55\xa6\xc5\x67\xf3\xee\xd7\x53\x30\x81\xcd\xbf\xc0\xb8\x37\x26\x0b\xfc\x2d\xe7\x28\x96\x53\xc9\x91\x44\x4a\x53\xad\x7d\x75\x74\x10\x9f\x9b\x77\xc6\x7a\x34\xff\x82\x9e\xb2\xf0\x6b\x73\x3b\xf0\x53\x76\x45\xfc\x2d\xbf\x57\x75\xa7\xc7\xa6\xfa\xb4\xf1\x4e\xf5\x6b\x53\x6d\xd5\xef\x0c\x15\x2a\x9f\xaa\x40\x8f\xcd\x68\xe3\x78\xdb\x66\x4d\x3f\xfd\xee\x83\x56\xf6\x5a\x98\xb3\x05\x27\x91\x50\x9b\x51\xb6\x0f\x2a\xa9\xc8\x09\x56\x5b\x53\x76\x72\x79\xbe\x8c\x96\x77\xb7\x8d\x6a\x46\x73\xe9\x60\x93\x6f\x8f\x4f\x8e\x35\x75\xfd\xec\x04\xd4\x01\x0b\xd7\xea\x02\x0e\xf7\x6a\x13\x96\x9b\x90\x04\x10\xbe\xc9\x30\x5c\x7b\x61\x2a\xe8\x0a\xc3\x87\x7c\x9f\x54\xc0\x03\xc7\xd8\x47\xae\x82\x89\x98\x8f\x50\xfb\x99\xd3\xe7\xec\x2e\x7b\x67\xab\x86\xfd\x89\xe1\x0a\x25\xf5\x48\xe5\x92\x85\xfe\x6f\x47\x4d\xa4\xf3\xf7\x5d\xe0\x6d\xb8\xa5\x61\x78\xfc\x42\x7f\x7e\xfe\xce\xe6\x6b\xb3\x59\x3d\xfd\x81\x85\xbe\x56\x3d\xde\x31\xf9\xbd\xd0\xff\x94\xe9\xd3\x7c\xa6\xd0\x1f\xb5\xc6\xd7\xde\x8f\x7f\x6f\x44\xeb\x8f\xa8\xf1\xb5\xd3\xe3\x55\x84\x47\xf5\xa0\xf1\x0d\xf5\x20\x0c\xd9\xbd\x5a\x57\x5f\xf1\x41\x9c\x28\x12\x13\x8e\x22\x7f\x81\xa2\x18\xea\xaf\xe5\xd5\x54\x12\x89\x0a\x27\xf4\x64\xf1\x52\x23\x7b\x1f\x92\x7d\xfe\xc8\x5e\x52\x80\x58\xb2\xfb\xf8\x02\x3c\x02\x15\xb0\x74\xf3\x27\x26\xb2\x56\xbb\x33\xb0\x98\x95\x1a\xdb\xd8\x8e\xdd\x4e\xf6\xb8\xcb\xb5\x5e\xfd\x51\x04\xd7\x5f\x9d\xe0\x6e\xe7\x9d\xe0\x27\x04\x37\xdf\xcf\xdc\xaf\xcf\x72\x63\xef\xd5\xcb\xd9\xd1\x5f\xbd\x94\x04\xf9\x8f\x4e\x8d\xc7\x1f\xb1\x32\xe9\x9c\x48\x6f\x39\x4d\xa3\x88\xf0\x87\xfc\x8b\xd4\x5f\x6c\x2e\xd4\x59\x0c\x02\x42\x43\xf4\x5d\x36\x26\x5c\x91\x9b\xff\xb4\x95\x3f\x24\xd9\x77\xa5\xe2\xdb\xd1\xde\xa7\xb1\x84\x71\x29\xc0\xdb\x7d\xbf\x32\x35\x88\x59\x5c\xfa\xa0\xb5\x35\x9b\x7b\x31\xb5\xb6\xb5\x1f\x58\x66\xa2\xf8\x94\x9b\xff\x5e\xad\xb0\xfb\x68\xa0\xb9\xfd\x41\xdb\xfe\x28\x8e\x09\xa1\xfc\xe5\x41\x7b\xfd\x9b\x31\x7e\xca\xf3\x57\xed\x42\x12\xae\xc2\x6c\xd4\x4e\x1b\xa7\xf5\x7a\xd5\xb4\xcc\x9a\x06\x01\x8d\xa9\x58\x96\xc5\x4d\xf3\x5c\x6b\x67\x1f\x71\x2f\x4c\x53\x6f\x98\x0d\xdb\x28\x6c\xe4\x60\x97\x71\x6d\x7f\xb0\x8d\xf2\x2f\x80\xff\x1b\x00\x00\xff\xff\xd8\x0a\x3d\x63\x36\x2c\x00\x00")

func blanco_cliXmlBytes() ([]byte, error) {
	return bindataRead(
		_blanco_cliXml,
		"blanco_cli.xml",
	)
}

func blanco_cliXml() (*asset, error) {
	bytes, err := blanco_cliXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "blanco_cli.xml", size: 11318, mode: os.FileMode(436), modTime: time.Unix(1634645520, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _blanco_onlineXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x6b\x6f\xda\x48\x17\xfe\xde\x5f\x71\xe4\x4f\xad\x04\xbe\x40\x80\x24\xc2\x54\x49\x68\xfa\x22\xb5\x6f\x50\xd3\x5d\x55\x1b\xa1\x68\x62\x1f\xc3\xb4\xe3\x19\xef\xcc\x98\xcb\xfe\xfa\xd5\xb1\xb9\x39\xb0\x5d\xad\xb2\xb0\xdd\x15\xfd\x52\x30\x67\xce\xed\x79\xce\xc5\x93\xee\xdb\x79\x2a\x60\x8a\xda\x70\x25\x43\x27\x70\x7d\x07\x50\x46\x2a\xe6\x72\x1c\x3a\x3f\x7d\xbe\xad\x9f\x3b\x60\x2c\x93\x31\x13\x4a\x62\xe8\x2c\xd0\x38\x6f\x7b\xaf\xba\x53\x26\x78\xcc\x2c\x57\xf2\x13\x9a\x5c\x58\x98\xa7\x42\x9a\xd0\x99\x58\x9b\x5d\x7a\xde\x6c\x36\x73\xa7\xa8\x59\x16\x27\xae\xd2\x63\xef\xe7\xb5\xf8\x50\xab\x84\x0b\x74\x20\x11\x6c\xaa\x72\x1d\x3a\xc3\xfe\xed\xd5\x63\xf0\x78\xed\x80\x55\x96\x89\x2b\x63\x50\x93\xa4\x09\x9d\x66\xa7\xed\x00\x37\x37\x2a\xcd\x04\x67\xd2\x86\x4e\xc2\x84\x41\xa7\xf7\x0a\x00\xa0\x9b\x95\xba\xfa\x68\x19\x17\x06\x22\x8d\xcc\x2a\x1d\x3a\x64\x79\xd8\xbf\x85\x1b\x25\x8d\xd2\x96\xe7\xa9\x53\xfe\x88\x71\xe8\x34\xfc\xa0\x53\xf7\x2f\xea\x7e\xfb\x73\xd0\xbc\x0c\x1a\x97\x0d\xdf\x6d\x74\x3a\xbf\x2c\x95\x16\x8a\x25\x4b\xb1\x37\xec\xdf\x7a\x57\xf5\xe0\x1a\x36\xb1\xc2\xd2\x62\xd7\x2b\x24\x36\x07\x62\x34\x91\xe6\x19\xc9\xf4\x36\xb1\x82\xce\x05\x1a\x60\x63\xc6\xa5\xb1\x30\xb8\xbf\x83\xe0\xc2\xf7\x5b\xf5\xe0\xb2\xe1\xfb\xad\x1a\xdc\x28\xed\x16\x9f\x3b\xc0\x64\x5c\x7c\x25\x7f\x82\xa0\x06\x1f\x70\x8a\x02\xae\xbb\xde\xb6\xea\x32\x6c\xaf\x1a\xf7\xf2\x29\x5b\xe7\x6d\xcb\xaf\xf5\x43\x50\x3a\xe6\x92\x89\xd0\xe9\x14\x80\xda\xdc\x84\xce\xed\xd5\xe0\xc3\xbb\xfe\x56\xe0\xc5\x19\x72\x7a\x10\x83\xc9\x30\xe2\x09\x8f\x8a\x48\x42\x67\x70\x7f\xf7\x58\x38\xff\x18\x38\x10\x09\x96\x1b\x0c\x9d\xb6\x1b\xb8\x4d\x07\x2c\x1a\xfb\xff\x3c\x7d\x42\x1d\x3a\x81\xe3\xf5\x3e\x4f\x10\xc8\xc1\x8a\x5e\xab\x19\x17\xa8\x21\xe6\x11\x69\x64\x7a\x01\x66\xc2\x84\x80\x48\x49\xcb\xb8\x04\x3b\x41\x18\xf4\xe1\x1b\x2e\x66\x4a\xc7\x2e\xac\xb4\xac\x4f\x6a\x4c\x50\x6b\x8c\xc1\x2a\xe0\x06\x90\xdb\x09\xea\xe2\x98\x60\xc6\xae\xc4\x2a\x46\xb7\x8c\x71\x09\x0c\x88\x15\xa4\xb3\x56\x91\x62\x06\xca\x2c\x3f\x61\x4c\x72\x24\xf5\x89\x8c\xa1\x8c\x10\x9a\xee\x99\x7b\x56\xe0\x43\x9f\x5a\x35\x50\xa5\xd1\x84\x6b\x63\x21\x63\xe3\x8d\x87\x85\x0d\xc1\x25\x32\xcd\x7f\xc3\x78\x63\xae\x62\xa2\x62\x7b\xc7\xdc\xad\xdb\xa8\xe2\x21\x54\x89\x41\x15\xa6\xf2\x27\x22\x49\xef\x46\x99\xbe\x8a\xf2\x14\xa5\xed\x7a\xe5\xa3\x5d\x51\xca\x32\xce\x6d\x4f\x2b\x65\xbb\xde\xea\x5b\xd5\x92\xb7\x6b\xaa\xeb\xad\x29\xf4\x7d\x5a\x5d\xec\xd2\xea\xaf\x31\xa9\xb3\x8f\x49\x83\x04\x58\x15\xd0\x65\xa0\xc0\x65\xa2\x74\x5a\x96\xd9\x16\xca\xb1\xa2\x82\xcb\x32\x64\x1a\x98\x05\xb6\x3e\x50\x23\xcc\x24\x10\xe1\x54\x02\xdc\x1a\x40\x69\x35\x47\x03\x76\xc2\x2c\x4c\xd8\x14\x81\x49\x26\xd4\x58\xe5\xa6\x62\x32\xd3\x2a\xa3\x68\xd1\x10\x58\x99\xc6\x18\x13\x2e\x31\x86\x2f\x1f\x87\x60\xa2\x09\xa6\xcc\xd4\x96\x5c\x66\xc2\x28\x78\x42\xc0\xf4\x09\xe3\xb8\x64\x93\x5d\xf1\x98\xcb\xe2\x08\xf9\x0d\x33\x6e\x27\x80\xbf\xe6\x7c\xca\x04\x85\x33\x65\x22\x47\xe3\xfe\x1b\x91\x0f\x2e\xce\x5f\x8e\x7d\x63\x6f\x17\xd9\x0f\x7d\xc4\x2c\xe1\xb4\x0d\xbb\x4a\x80\x51\x23\xa1\xdc\x72\x39\x2e\xf3\xbd\xdb\x5e\x3e\xa2\x65\x31\xb3\x8c\x9a\xcc\xc1\x73\xed\xad\x1c\x7e\xf0\x47\x87\xc8\x7b\xa3\x19\xbc\x34\xef\x8d\xe7\x35\xd7\x70\xbc\xaa\x87\x7d\x9c\xf2\x08\x3f\xbd\xbf\x86\x94\x2d\x88\xd9\xb9\xc1\x18\x94\x14\x0b\xe0\xc9\x86\xda\x13\x66\xca\xee\x4a\x13\x13\xee\x72\x9b\xe5\x76\x20\x2d\xa1\x55\x94\x57\x6e\xa8\x2c\x25\x90\xa2\x48\x09\x95\x6b\x30\x19\x8b\xf0\x98\x18\x78\xd4\xaa\xcd\x83\x3f\x7a\x7d\x06\x3e\xa8\xa7\xaf\x30\xec\x0f\xd9\x18\xdf\x94\xd8\x48\x7b\x6f\x35\xb2\x94\x24\xa9\xe0\x69\x95\x30\x0f\x9d\x91\x37\xbf\x7b\xfa\x8a\x11\x69\x78\xdd\x29\x0f\xee\xd8\xa4\x7f\xc3\xfe\x97\x41\x5a\xa8\xe3\xf4\xdf\xcd\xfd\x83\x3f\xda\x75\xee\x10\x3c\x38\x6b\x9f\x78\x70\x68\x1e\x04\xad\x91\x47\x0e\xeb\x7b\x72\xf7\x50\x15\xdd\x7e\x31\x92\x4d\xf7\xec\x0f\xf6\x31\x25\xed\xf3\xb1\x36\xd6\x2c\x35\x34\x8f\x8a\xb1\x48\x12\xa6\xc4\x95\xa6\x53\xb1\xcb\xec\x6f\xa9\xdb\x03\x6e\x29\x5a\xa0\xbb\xb5\xea\x94\x13\xb2\x5c\x6e\x2a\x66\x37\x8b\x4e\xcb\x3d\xaf\xae\x61\x38\x8f\x30\xb3\x30\xa3\x39\x6d\x97\x2e\x1b\x60\x7a\x49\x36\x9c\x47\x22\x37\x7c\x8a\x62\x51\x8e\x4f\xca\x3e\x68\x94\x31\x6a\x72\x30\x55\x31\x42\xf3\xc7\x67\xd2\xf9\xc8\xa3\xc8\xe8\xd8\xff\x50\x4c\xd1\xf2\x88\xd5\xaf\x95\x88\xdf\x1c\xa7\x5d\x5c\x9c\xc6\xc6\x71\x40\xe6\x42\x14\x53\xe0\x30\x28\xbe\x78\xe1\x3e\xa1\xf8\x67\x28\x36\xce\x8e\xd0\xf4\x9b\x8d\x3d\x6f\xe4\xa7\xa6\xff\xdf\x6a\xfa\x8d\xce\x9e\xa6\x7f\x9c\x7e\xdf\x3c\xad\x87\x47\xc2\xf7\x90\xfd\xbe\xd9\xf2\x5f\x8a\xe2\xb3\x1e\xd1\xda\xf3\x8a\x9d\x28\x21\xd4\x8c\xea\xea\x1b\x2e\x4c\x8d\xb0\xcb\x34\x9a\xf2\xbe\x85\x80\x79\x37\xb7\xef\xef\x2d\xb3\x48\x89\xc1\xc8\xae\xee\x3d\x8a\xeb\x13\x82\xb9\xbc\xc7\x00\x33\x51\x33\x79\x09\x37\x57\x50\x87\xc0\xf5\x7f\x78\xfc\x9a\xcd\x91\x87\xab\xd8\xe8\x6c\xfb\xbb\x6f\x7a\xeb\x34\x1c\xa9\x84\x5b\x2f\x5e\xd9\x9e\x81\xdf\x3e\x02\xf8\x11\x3b\x81\xff\x77\x80\xdf\x39\xed\xeb\x87\xa7\x40\xbb\x72\xcf\x73\xfe\x4f\xde\xf3\x6c\x3d\x30\xbd\x57\x5d\xef\xf9\x9f\xda\x7a\xbf\x07\x00\x00\xff\xff\x40\xf4\xf4\x77\xb5\x1b\x00\x00")

func blanco_onlineXmlBytes() ([]byte, error) {
	return bindataRead(
		_blanco_onlineXml,
		"blanco_online.xml",
	)
}

func blanco_onlineXml() (*asset, error) {
	bytes, err := blanco_onlineXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "blanco_online.xml", size: 7093, mode: os.FileMode(436), modTime: time.Unix(1634646238, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"example.xml":       exampleXml,
	"blanco_cli.xml":    blanco_cliXml,
	"blanco_online.xml": blanco_onlineXml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"blanco_cli.xml":    &bintree{blanco_cliXml, map[string]*bintree{}},
	"blanco_online.xml": &bintree{blanco_onlineXml, map[string]*bintree{}},
	"example.xml":       &bintree{exampleXml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
